name: build and deploy a quarkus application
on:
  workflow_call:
    inputs: 
      app:
        description: 'the name of the app this repo belongs to'
        required: true
        type: string  

jobs:
  java-build:
    runs-on: [self-hosted, "${{ inputs.app }}"]
    steps:
    - name: set repo name
      shell: bash
      run: | 
        echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

    - name: set sonarqube token
      shell: bash
      run: | 
        echo "SONAR_TOKEN=$(cat /github/home/_sonarqube/SONARQUBE_TOKEN)" >> $GITHUB_ENV             

    - name: checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache SonarQube packages
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar        

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2        

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
        SONAR_HOST_URL: http://sonarqube.sonarqube.svc:9000
      run: ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ github.repository_owner }}_${{ env.REPOSITORY_NAME }}

    - name: Build
      run: |
        ./mvnw -B -DskipTests clean package --file pom.xml

# TODO change this into an s2i build
  image-build:
    runs-on: [self-hosted, "${{ inputs.app }}"]
    needs: java-build
    steps:
    - name: set repo name
      shell: bash
      run: | 
        echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV         

    # - name: set ocp token
    #   shell: bash
    #   run: | 
    #     echo "KUBERNETES_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" >> $GITHUB_ENV
    #     echo "KUBERNETES_CA=$(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt)" >> $GITHUB_ENV
    
    - name: Install CLI tools from OpenShift Mirror
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: "4"
        helm: "3.6.2"
        skip_cache: true
                
    - name: checkout code
      uses: actions/checkout@v3

    # - name: kubernetes login
    #   uses: redhat-actions/oc-login@v1
    #   with:
    #     # URL to your OpenShift cluster.
    #     # Refer to Step 2.
    #     openshift_server_url: https://kubernetes.default.svc:443

    #     # Authentication Token. Can use username and password instead.
    #     # Refer to Step 3.
    #     openshift_token: ${{ env.KUBERNETES_TOKEN }}

    #     certificate_authority_data: ${{ env.KUBERNETES_CA }}

    #     # Optional - this sets your Kubernetes context's current namespace after logging in.
    #     namespace: ${{ inputs.app }}-build       

    - name: deploy build-config
      shell: bash
      run: | 
        helm --debug --kube-apiserver https://kubernetes.default.svc:443 --kube-ca-file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt --kube-token $(cat /var/run/secrets/kubernetes.io/serviceaccount/token) \
        upgrade --repo https://smuzychu.github.io/shared-workflows --version "0.1.0" ${{ env.REPOSITORY_NAME }} quarkus-build -i -n ${{ inputs.app }}-build \
        --set github.owner=${{ github.repository_owner }} --set github.repo_name=${{ env.REPOSITORY_NAME }} --set github.commit_sha=${{ github.sha }} --set github.pat=${{ github.token }} \
        --set nameOverride=${{ env.REPOSITORY_NAME }}

    - name: start and follow the build
      shell: bash
      run: | 
        oc start-build ${{ env.REPOSITORY_NAME }} -F -n ${{ inputs.app }}-build

  deploy-dev:
    runs-on: [self-hosted, "${{ inputs.app }}"]
    needs: image-build
    steps:
    - name: set repo name
      shell: bash
      run: | 
        echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV
    
    - name: set github token
      shell: bash
      run: | 
        echo "GITHUB_GITOPS_TOKEN=$(cat /github/home/_github/token)" >> $GITHUB_ENV

    # - name: Install CLI tools from OpenShift Mirror
    #   uses: redhat-actions/openshift-tools-installer@v1
    #   with:
    #     oc: "4"
    #     helm: "3.6.2"
    #     skip_cache: true
    #     yq: "v4.25.1"

    - name: Install CLI tools from github
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        yq: "v4.25.1"
        source: github     
                
    - name: checkout application gitops repo
      uses: actions/checkout@v3
      with:
        repository: smuzychu/${{ inputs.app }}-gitops
        persist-credentials: false
        path: gitops
  
    - name: update image version
      shell: bash
      run: | 
        sed -i "s/            tag: [a-zA-Z0-9]*/            tag: ${{ github.sha }}/g" $GITHUB_WORKSPACE/gitops/components/${{ env.REPOSITORY_NAME }}-argocd-app-dev.yaml
    
    - name: Commit files
      run: |
        set -x
        git -C $GITHUB_WORKSPACE/gitops config --local user.email "quarkus-ci+github-actions[bot]@users.noreply.github.com"
        git -C $GITHUB_WORKSPACE/gitops config --local user.name "github-actions[bot]"
        git -C $GITHUB_WORKSPACE/gitops commit -m "image update - release dev ${{ github.sha }}" -a
        git -C $GITHUB_WORKSPACE/gitops push https://github-actions[bot]:$(cat /github/home/_github/token)@github.com/smuzychu/${{ inputs.app }}-gitops.git HEAD:master --follow-tags

    - name: integration tests (emulated)
      run: |
        echo noop

  deploy-qa:
    runs-on: [self-hosted, "${{ inputs.app }}"]
    needs: deploy-dev
    steps:
    - name: set repo name
      shell: bash
      run: | 
        echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

    - name: Install CLI tools from github
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        yq: "v4.25.1"
        source: github     
                
    - name: checkout application gitops repo
      uses: actions/checkout@v3
      with:
        repository: smuzychu/${{ inputs.app }}-gitops
        persist-credentials: false
        path: gitops
  
    - name: update image version
      shell: bash
      run: | 
        sed -i "s/            tag: [a-zA-Z0-9]*/            tag: ${{ github.sha }}/g" $GITHUB_WORKSPACE/gitops/components/${{ env.REPOSITORY_NAME }}-argocd-app-qa.yaml

    - name: Commit files
      run: |
        set -x
        git -C $GITHUB_WORKSPACE/gitops config --local user.email "quarkus-ci+github-actions[bot]@users.noreply.github.com"
        git -C $GITHUB_WORKSPACE/gitops config --local user.name "github-actions[bot]"
        git -C $GITHUB_WORKSPACE/gitops commit -m "image update - release qa ${{ github.sha }}" -a
        git -C $GITHUB_WORKSPACE/gitops push https://github-actions[bot]:$(cat /github/home/_github/token)@github.com/smuzychu/${{ inputs.app }}-gitops.git HEAD:master --follow-tags

    - name: integration tests (emulated)
      run: |
        echo noop


  deploy-prod:
    runs-on: [self-hosted, "${{ inputs.app }}"]
    needs: deploy-qa
    steps:
    - name: set repo name
      shell: bash
      run: | 
        echo "REPOSITORY_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

    - name: Install CLI tools from github
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        yq: "v4.25.1"
        source: github     
                
    - name: checkout application gitops repo
      uses: actions/checkout@v3
      with:
        repository: smuzychu/${{ inputs.app }}-gitops
        persist-credentials: false
        path: gitops
  
    - name: update image version
      shell: bash
      run: | 
        sed -i "s/            tag: [a-zA-Z0-9]*/            tag: ${{ github.sha }}/g" $GITHUB_WORKSPACE/gitops/components/${{ env.REPOSITORY_NAME }}-argocd-app-prod.yaml

    - name: Commit files
      run: |
        set -x
        git -C $GITHUB_WORKSPACE/gitops config --local user.email "quarkus-ci+github-actions[bot]@users.noreply.github.com"
        git -C $GITHUB_WORKSPACE/gitops config --local user.name "github-actions[bot]"
        git -C $GITHUB_WORKSPACE/gitops commit -m "image update - release - prod ${{ github.sha }}" -a
        git -C $GITHUB_WORKSPACE/gitops push https://github-actions[bot]:$(cat /github/home/_github/token)@github.com/smuzychu/${{ inputs.app }}-gitops.git HEAD:master --follow-tags

    - name: integration tests (emulated)
      run: |
        echo noop